basePath: /api
definitions:
  handlers.AuthRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  handlers.PasswordChangeRequest:
    properties:
      new_password:
        type: string
    required:
    - new_password
    type: object
  handlers.RegisterRequest:
    properties:
      password:
        type: string
      role:
        description: '''admin'' или ''manager'''
        type: string
      username:
        type: string
    required:
    - password
    - role
    - username
    type: object
  models.CategoryURL:
    properties:
      categoryID:
        type: string
      categoryURL:
        type: string
      id:
        type: string
      isActive:
        type: boolean
      lastChecked:
        type: string
      name:
        type: string
      source:
        type: string
    type: object
  models.GalleryCategory:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  models.GalleryProduct:
    properties:
      categoryID:
        type: string
      dataUpload:
        type: string
      id:
        type: string
      imageURL:
        type: string
      isActive:
        type: boolean
      productURL:
        type: string
      title:
        type: string
    type: object
  models.GalleryProductPrice:
    properties:
      category_id:
        type: string
      id:
        type: integer
      price:
        type: number
      product_url:
        type: string
      updated_at:
        type: string
    type: object
  models.PaginatedProductsResponse:
    properties:
      limit:
        type: integer
      page:
        type: integer
      products:
        items:
          $ref: '#/definitions/models.GalleryProduct'
        type: array
      total:
        type: integer
    type: object
host: costpulse.ru
info:
  contact:
    email: admin@costpulse.ru
    name: SmartStack Dev
  description: REST API для мониторинга цен
  title: Price Monitor API
  version: "1.0"
paths:
  /admin/users/{id}:
    delete:
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "403":
          description: Forbidden
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Удаление пользователя
      tags:
      - Admin
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные пользователя
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/handlers.AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "429":
          description: Too Many Requests
          schema:
            additionalProperties: true
            type: object
      summary: Авторизация пользователя
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные нового пользователя
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/handlers.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Регистрация нового пользователя
      tags:
      - Auth
  /categories/urls:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.CategoryURL'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Получение всех URL категорий
      tags:
      - Categories
  /client/change-password:
    post:
      consumes:
      - application/json
      parameters:
      - description: Новый пароль
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.PasswordChangeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Изменить пароль
      tags:
      - Manager
      - Client
  /gallery/categories:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.GalleryCategory'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Получение списка категорий
      tags:
      - Gallery
  /gallery/prices:
    get:
      parameters:
      - description: Дата от (yyyy-mm-dd)
        in: query
        name: from
        type: string
      - description: Дата до (yyyy-mm-dd)
        in: query
        name: to
        type: string
      - default: 1
        description: Номер страницы
        in: query
        name: page
        type: integer
      - default: 50
        description: Размер страницы
        in: query
        name: limit
        type: integer
      - description: ID категории
        in: query
        name: category_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.GalleryProductPrice'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: История цен
      tags:
      - Gallery
  /gallery/products:
    get:
      parameters:
      - default: 1
        description: Номер страницы
        in: query
        name: page
        type: integer
      - default: 50
        description: Размер страницы
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PaginatedProductsResponse'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Список продуктов
      tags:
      - Gallery
  /gallery/products/{id}:
    get:
      parameters:
      - description: ID продукта
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GalleryProduct'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Получить продукт по ID
      tags:
      - Gallery
  /manager/change-password:
    post:
      consumes:
      - application/json
      parameters:
      - description: Новый пароль
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handlers.PasswordChangeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Изменить пароль
      tags:
      - Manager
      - Client
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
